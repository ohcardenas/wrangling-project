library(tidyverse)
library(dslabs)


data("murders")


str(murders)


head(murders)


p<- murders %>% ggplot(aes(population,total, label= abb))+
    geom_label(aes(color=region))
p


help("geom_histogram")



data("heights")

p <- heights %>% ggplot(aes(height, group = sex)) +
     geom_density()

p

## Summarize practice 

data("heights")

s <- heights %>%
     group_by(sex)%>%
     summarize(average = mean(height) , standard_deviation = sd(height))
s


data("heights")

data_summary <- heights %>% 
                    group_by(sex)%>%
                    summarize(average = mean(height),standart_deviation = sd(height) )



data_summary


help(min)

# Gapminder practice summary and visualisation

library(dslabs)
data("gapminder")
head(gapminder)


gapminder%>% filter(country %in% ("Sri Lanka"))

turkey_IM <- gapminder %>% filter(country %in% ("Turkey"))%>%
                      group_by(country)%>%
                      summarize(average = mean(infant_mortality, na.rm = TRUE),
                      standard_deviation = sd(infant_mortality, na.rm = TRUE))

srilanka_IM <- gapminder %>% filter(country %in%("Sri lanka"))%>%
              summarize(average = mean(infant_mortality, na.rm = TRUE),
              standard_deviation = sd(infant_mortality, na.rm = TRUE))

###Didn't work with sri lanka
turkey_IM

srilanka_IM

#Another useful peace of code in the case you 
## need not the average but the specific year of the infant mortality 

turkey_srilanka_IM_1995 <- gapminder %>% filter(country %in% c("Turkey","Sri Lanka"),
                                                year == "1995")%>%
                                         select(infant_mortality,country)

turkey_srilanka_IM_1995




### Quick graphs to summarize data 


gapminder %>% filter( year == "1962")%>%
              ggplot(aes(fertility,life_expectancy,color = continent))+
              geom_point()











data("gapminder")

str(gapminder)

filter(gapminder,year%in% c("1962","2012"))%>%
       ggplot(aes(fertility, life_expectancy, color = continent))+
       geom_point()+
       facet_grid(continent~year)


## Facet by year only 

filter(gapminder,year%in% c("1962","2012"))%>%
  ggplot(aes(fertility, life_expectancy, color = continent))+
  geom_point()+
  facet_grid(.~year)


#### Now we are going to organize multiple plots organized in multiple rows 


filter(gapminder,year%in% c("1962","1980","1990","2000","2012"))%>%
  ggplot(aes(fertility, life_expectancy, color = continent))+
  geom_point()+
  facet_wrap(.~year)


### Scatter plot of US fertility by year 

library(ggthemes)

filter(gapminder, country %in% ("United States"))%>%
      ggplot(aes(year,fertility))+
      geom_point(size= 3, alpha = 0.3,color = "firebrick")+
      ggtitle("Time series plot USA(Fertility)")+
      theme_foundation()

countries<- c("Germany","South Korea")

filter(gapminder,country %in% countries)%>%
      ggplot(aes(year,life_expectancy, color = country))+
      geom_line()

### Transformation practice 
## transform the scale of a graph so is much more understandable 



data("gapminder")

gapminder <- gapminder %>% mutate(dollars_per_day = (gdp/population)/365)

head(gapminder)      

past_year <- 1970

gapminder %>% filter(year == past_year,!is.na(gdp))%>%
          ggplot(aes(dollars_per_day))+
          geom_histogram(binwidth = 1, color = "firebrick",alpha = 0.3 )+
          scale_x_continuous( trans = "log2")

## reorder function how it works 


fac_1 <- factor(c("Asia","Asia","West","West","West"))

value <- c(10,11,12,6,4)

levels(fac_1)


fac <- reorder(fac,value,FUN = mean)

levels(fac)
  

## With the Knowledge adquired about the reorder function
## We are going to make a box plot by region of the median dollars per day 
### of the countries in the gapminder data set 

head(gapminder)




# reorder the region having in to account the median of dollar per day 
p <- gapminder %>%
  filter(year == past_year & !is.na(gdp)) %>%
  mutate(region = reorder(region, dollars_per_day, FUN = median)) %>%    
  ggplot(aes(region, dollars_per_day, fill = continent)) +    # color by continent
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) 

p              



#### last peace of code to show the data points 
p + scale_y_continuous( trans = "log2")+ geom_point(show.legend = FALSE)
  
### Histogram of western contries against developiping income in 


past_year <-1970

present_year <-2010

head(gapminder)

west <- c("Western Europe", "Northern Europe", "Southern Europe", "Northern America", "Australia and New Zealand")

gapminder <- gapminder %>% mutate(dollars_per_day = (gdp/population)/365)



hist_w_a_d  <- filter(gapminder, year %in% c(past_year,present_year) & !is.na(gdp)) %>%
mutate(group = ifelse(region %in% west, "West", "Developing")) %>%
ggplot(aes(dollars_per_day)) +
geom_histogram(binwidth = 1, color = "firebrick", alpha = 0.3) +
scale_x_continuous( trans = "log2") +
facet_grid(year~ group)

hist_w_a_d

###now we are going to do the same exercise but for only the countries that have 
## information in both of the years that we are analizing 

country_list_1 <- filter(gapminder, year == (past_year), !is.na(dollars_per_day))%>%.$country
country_list_1

country_list_2 <- filter(gapminder, year == (present_year), !is.na(dollars_per_day))%>%.$country

country_list_2



country_list <- intersect(country_list_1,country_list_2)

country_list

filter(gapminder, year %in% c(past_year,present_year) & country %in% country_list) %>%
mutate(group = ifelse(region %in% west, "West", "Developing")) %>%
ggplot(aes(dollars_per_day)) +
geom_histogram(binwidth = 1 , color = "firebrick") +
scale_x_continuous(trans = "log2")+
facet_grid(group~year)



## Gapminder practice exersices 


library(dslabs)
library(ggplot2)
library(dplyr)
library(tidyverse)

data("gapminder")
top_n(gapminder,5)

head(gapminder)


help("top_n")

continent_1 <- Africa
year_1 <- 2012

african_countries_2012 <-filter(gapminder, year == ("2012") & continent == ("Africa")) %>%
ggplot(aes(fertility,life_expectancy, color = region)) +
geom_point()


african_countries_2012


### if we want to add a new column with the names abbreviated level 4.5


african_countries_2012_point <-filter(gapminder, year == ("2012") & continent == ("Africa")) %>%
ggplot(aes(fertility,life_expectancy, color = region, label = country)) +
geom_label()

african_countries_2012_point

## to improove the plot install the ggrepel package and ggthemes
## so the names of the countries are not going to overlap
#and we are going to be able to add more themes 


install.packages("ggrepel")
install.packages("ggthemes")
library(ggrepel)
library(ggthemes)



african_countries_2012_label <-filter(gapminder, year == ("2012") & continent == ("Africa")) %>%
ggplot(aes(fertility,life_expectancy, color = region, label = country)) +
geom_label_repel()+
scale_color_discrete(name = "Region")+
theme_pander()

african_countries_2012_label


help("geom_text_repel")



## Tried using the abbreviate function to create a new vector 
## the plot wouldnt zoom and the abbreviations are not clear

help("abbreviate")

### We are going to create a table to understand a little bit more 
## about the countries with a high life expectancy 

data("gapminder")



head(gapminder)




table_high_LE_africa <- filter(gapminder, life_expectancy >= ("70") & fertility <= ("3") & continent == ("Africa")) %>%
                        select(country, region)%>%
                        distinct()
    
## the table wa throwing repeated information so we used distinct to correct that
# result 4.5

table_high_LE_africa

### the real problem was that you didnt filter the year 2012 so it was showing
## the same countries for each year Level 4.5

table_high_LE_africa <- filter(gapminder, life_expectancy >= ("70") & fertility <= ("3") & continent == ("Africa") & year == "2012") %>%
  select(country, region)



table_high_LE_africa



### We are going to analize if the war of Vietnam had an effect on life expectancy
## the ear lasted from 1960 to 1975 and Vietnam and USA were involved 

countries_war <- c("United States", "Vietnam")

tab <- filter(gapminder, year >= "1960" & year <= "2010" & country %in% countries_war)


tab  



#### Now we are  going to plot a line of life_expectancy against year to create that 
## time plot series


tab %>% ggplot(aes(year , life_expectancy, color = country)) +
        geom_line()




filter(gapminder, year >= "1960" & year <= "2010" & country == "Cambodia")%>%
ggplot(aes(year,life_expectancy)) +
geom_line()


### lets add a new variable to the data set dollars per day is that new variable 


daydollars <- mutate(gapminder, dollars_per_day = (gdp/ population)/365) %>%
              filter( continent == "Africa" & year == "2010" & !is.na(dollars_per_day))


daydollars


## now we are goint to make a  density plot of the dollars per day in african countries 
# in 2010 


daydollars_density <-daydollars %>% ggplot(aes(dollars_per_day))+
                    geom_density()+
                    scale_x_continuous( trans = "log2")


daydollars_density


#### now we are going to do the same but for years 1970 and 2010

years_africa <- c("1970","2010")


daydollars$country[years_africa]

africa_second_plot <- mutate(gapminder, dollars_per_day = (gdp/ population)/365) %>%
filter( continent == "Africa" & year %in% years_africa & !is.na(dollars_per_day)) %>%
ggplot(aes(dollars_per_day, fill = region))+
geom_density(alpha = 0.5, bw = 0.5, position = "stack" )+
scale_x_continuous( trans = "log2")+
facet_grid(~year)

africa_second_plot



## we are going to continue exploring gapminder by 

gapminder_africa_2010 <- mutate(gapminder, dollars_per_day = (gdp/population)/365) %>%
                        filter(year %in% c("1970","2010"),continent == "Africa", !is.na(dollars_per_day))


head(gapminder_africa_2010)

gapminder_africa_2010 %>% ggplot(aes(dollars_per_day, infant_mortality, color = region, label = country)) +
                          geom_point()+
                          scale_x_continuous(trans = "log2")+
                          geom_text()+
                          facet_grid(year ~ .)



### Redefine the state object so that the levels are re-ordered by rate.
###Print the new object state and its levels (using levels) so you can see that the vector is now re-ordered by the levels.

                            
library(dplyr)
library(ggplot2)
library(dslabs)
dat <- us_contagious_diseases %>%
  filter(year == 1967 & disease=="Measles" & !is.na(population)) %>% mutate(rate = count / population * 10000 * 52 / weeks_reporting)
state <- dat$state 

state
rate <- dat$count/(dat$population/10000)*(52/dat$weeks_reporting)


state <- reorder(state, rate, FUN = mean)


levels(state)

state

help("reorder")


### Now we are going to customize this plot a little more by creating a rate variable and reordering by that variable instead.

library(dplyr)
library(ggplot2)
library(dslabs)

data(us_contagious_diseases)
head(us_contagious_diseases)

dat <- us_contagious_diseases %>% filter(year == 1967 & disease=="Measles" & count>0 & !is.na(population)) %>%
  mutate(rate = count / population * 10000 * 52 / weeks_reporting)%>%
  mutate(state = reorder(state, rate, FUN = mean))




dat %>% ggplot(aes(state, rate)) +
  geom_bar(stat="identity") +
  coord_flip()


##To further investigate whether moving to the western region is a wise decision
## let's make a box plot of murder rates by region, showing all points.

library(dplyr)
library(ggplot2)
library(dslabs)
library(tidyverse)

data("murders")
head(murders)

sum(is.na(murders$population))
sum(is.na(murders$state))
sum(is.na(murders$abb))
sum(is.na(murders$total))
sum(is.na(murders$region))


graph_murders <- murders %>% mutate(rate = (total/population)*100000 & region = reorder(region, rate, FUN = median) %>% ggplot(aes(region, rate)) + geom_boxplot()  

                                    
graph_murders          


murders %>% mutate(rate = total/population*100000) %>%
  mutate(region=reorder(region, rate, FUN=median)) %>%
  ggplot(aes(region, rate)) +
  geom_boxplot() +
  geom_point()












##### Code to group by an specific group not implied in the dataset 
####after reorder that new data set how we want it 


gapminder <- gapminder %>%
  mutate(group = case_when(
    .$region %in% west ~ "West",
    .$region %in% c("Eastern Asia", "South-Eastern Asia") ~ "East Asia",
    .$region %in% c("Caribbean", "Central America", "South America") ~ "Latin America",
    .$continent == "Africa" & .$region != "Northern Africa" ~ "Sub-Saharan Africa",
    TRUE ~ "Others"))

# reorder factor levels
gapminder <- gapminder %>%
  mutate(group = factor(group, levels = c("Others", "Latin America", "East Asia", "Sub-Saharan Africa", "West")))


### after that we filter it , scale it and use the stack command to stack the geom
##density 

p <- gapminder %>%
  filter(year %in% c(past_year, present_year) & country %in% country_list) %>%
  ggplot(aes(dollars_per_day, fill = group)) +
  scale_x_continuous(trans = "log2") +
  geom_density(alpha = 0.2, bw = 0.75, position = "stack") +
  facet_grid(year ~ .)



##### Another example of special grouping 
### Only this time the objective is to create a summary on a table 

gapminder <- gapminder %>%
  mutate(group = case_when(
    .$region %in% west ~ "The West",
    .$region %in% "Northern Africa" ~ "Northern Africa",
    .$region %in% c("Eastern Asia", "South-Eastern Asia") ~ "East Asia",
    .$region == "Southern Asia" ~ "Southern Asia",
    .$region %in% c("Central America", "South America", "Caribbean") ~ "Latin America",
    .$continent == "Africa" & .$region != "Northern Africa" ~ "Sub-Saharan Africa",
    .$region %in% c("Melanesia", "Micronesia", "Polynesia") ~ "Pacific Islands"))

# define a data frame with group average income and average infant survival rate
surv_income <- gapminder %>%
  filter(year %in% present_year & !is.na(gdp) & !is.na(infant_mortality) & !is.na(group)) %>%
  group_by(group) %>%
  summarize(income = sum(gdp)/sum(population)/365,
            infant_survival_rate = 1 - sum(infant_mortality/1000*population)/sum(population))
surv_income %>% arrange(income)


#### Making a plot that has defined limits and defined breaks 



surv_income %>% ggplot(aes(income, infant_survival_rate, label = group, color = group)) +
  scale_x_continuous(trans = "log2", limit = c(0.25, 150)) +
  scale_y_continuous(trans = "logit", limit = c(0.875, .9981),
                     breaks = c(.85, .90, .95, .99, .995, .998)) +
  geom_label(size = 3, show.legend = FALSE) 



### The plot shows

  

library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(dslabs)
data(us_contagious_diseases)
### Initial analisis of the data set ant the pertinent variables 


top_n(us_contagious_diseases,20)

names(us_contagious_diseases)

levels(us_contagious_diseases$disease)


#### We show the use of geom_tile to show theperformance of a bast amount of 
## variables in one category in this case the performance of all of the states
## in USA and the variable measles and eventually smallpox cases   

the_disease <- "Measles"
dat <- us_contagious_diseases %>% 
  filter(!state%in%c("Hawaii","Alaska") & disease == the_disease) %>% 
  mutate(rate = count / population * 10000) %>% 
  mutate(state = reorder(state, rate))

dat %>% ggplot(aes(year, state, fill = rate)) + 
  geom_tile(color = "grey50") + 
  scale_x_continuous(expand=c(0,0)) + 
  scale_fill_gradientn(colors = brewer.pal(9, "Reds"), trans = "sqrt") + 
  theme_minimal() + 
  theme(panel.grid = element_blank()) + 
  ggtitle(the_disease) + 
  ylab("") + 
  xlab("")

##### Modifying the  graph to show the rate of small pox insted of the rate of measles 
## exclude cases in where the cases were reported in fewer than 10 weeks 
# from the plot 
names(us_contagious_diseases)
the_disease_2 <- "Smallpox"

dat <- us_contagious_diseases %>% 
  filter(!state%in%c("Hawaii","Alaska") & disease == the_disease_2 & !weeks_reporting < 10) %>% 
  mutate(rate = count / population * 10000) %>% 
  mutate(state = reorder(state, rate))

head(dat)


dat %>% ggplot(aes(year, state, fill = rate)) + 
  geom_tile(color = "grey50") + 
  scale_x_continuous(expand=c(0,0)) + 
  scale_fill_gradientn(colors = brewer.pal(9, "Reds"), trans = "sqrt") + 
  theme_minimal() + 
  theme(panel.grid = element_blank()) + 
  ggtitle(the_disease_2) + 
  ylab("") + 
  xlab("")


###  The next code plots a time series of measles per popuplation by state 



library(dplyr)
library(ggplot2)
library(dslabs)
library(RColorBrewer)
data(us_contagious_diseases)

the_disease = "Measles"
dat <- us_contagious_diseases %>%
  filter(!state%in%c("Hawaii","Alaska") & disease == the_disease) %>%
  mutate(rate = count / population * 10000) %>%
  mutate(state = reorder(state, rate))

avg <- us_contagious_diseases %>%
  filter(disease==the_disease) %>% group_by(year) %>%
  summarize(us_rate = sum(count, na.rm=TRUE)/sum(population, na.rm=TRUE)*10000)
avg


dat %>% ggplot() +
  geom_line(aes(year, rate, group = state),  color = "grey50", 
            show.legend = FALSE, alpha = 0.2, size = 1) +
  geom_line(mapping = aes(year, us_rate),  data = avg, size = 1, color = "black") +
  scale_y_continuous(trans = "sqrt", breaks = c(5,25,125,300)) + 
  ggtitle("Cases per 10,000 by state") + 
  xlab("") + 
  ylab("") +
  geom_text(data = data.frame(x=1955, y=50), mapping = aes(x, y, label="US average"), color="black") + 
  geom_vline(xintercept=1963, col = "blue")


#### Once again we are going to make the same plot but for Small pox cases 
## that have been reported for more than 10 weeks 

the_disease_2 <- "Smallpox"


dat <- us_contagious_diseases %>%
  filter(!state%in%c("Hawaii","Alaska") & disease == the_disease_2 & weeks_reporting >= 10) %>%
  mutate(rate = count / population * 10000) %>%
  mutate(state = reorder(state, rate))

avg <- us_contagious_diseases %>%
  filter(disease==the_disease_2) %>% group_by(year) %>%
  summarize(us_rate = sum(count, na.rm=TRUE)/sum(population, na.rm=TRUE)*10000)
avg


dat %>% ggplot() +
  geom_line(aes(year, rate, group = state),  color = "grey50", 
            show.legend = FALSE, alpha = 0.2, size = 1) +
  geom_line(mapping = aes(year, us_rate),  data = avg, size = 1, color = "black") +
  scale_y_continuous(trans = "sqrt", breaks = c(5,25,125,300)) + 
  ggtitle("Cases per 10,000 by state") + 
  xlab("") + 
  ylab("") +
  geom_text(data = data.frame(x=1955, y=50), mapping = aes(x, y, label="US average"), color="black") + 
  geom_vline(xintercept=1963, col = "blue")



#### 

library(dslabs)
library(dplyr)
library(ggplot2)
library(RColorBrewer)


data("us_contagious_diseases")

names(us_contagious_diseases)

levels(us_contagious_diseases$disease)


disease_time_series <- filter(us_contagious_diseases, weeks_reporting >= 10 & state == "California") %>%
                       mutate(rate = count/population*10000)%>%
                       ggplot(aes(year, rate, color = disease))+
                       geom_line()


disease_time_series

#### If we would want to achieve the same but adding the new variable with sumarize

 









#### just so you can have this piece of code before having the graph 
### this is going to be a great summary of the rates per disease throught the years



 us_contagious_diseases %>% filter(weeks_reporting >= 10 & state == "California") %>%
                            group_by(year, disease)%>%
                            summarise(rate = sum(count)/sum(population)*10000)
 
 
##### after we define the new variable with summarise we can plot  
 
 us_contagious_diseases %>% filter(weeks_reporting >= 10 & state == "California") %>%
   group_by(year, disease)%>%
   summarise(rate = sum(count)/sum(population)*10000)%>%
   ggplot(aes(year, rate, color = disease)) +
   geom_line()



 
 ### If we would like to use the same code to plot the contagion rate in the us accross 
 ### the years 
 
 
 us_contagious_diseases %>% filter(!is.na(population))%>%
   group_by(year, disease)%>%
   summarise(rate = sum(count)/sum(population)*10000)%>%
   ggplot(aes(year, rate, color = disease)) +
   geom_line()
 
 
 



  

                



















































